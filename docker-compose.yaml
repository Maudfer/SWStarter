# dockerâ€‘compose.yml  (add the develop section to each service)
services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - INTERNAL_API_URL=http://backend:4000
    command: npm run dev
    develop:
      watch:
        - path: ./frontend
          target: /app
          action: sync
        - path: ./frontend/package.json
          action: rebuild
        - path: ./frontend/tsconfig.json
          action: rebuild

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    command: npx ts-node src/index.ts
    environment:
      - USE_REDIS=${USE_REDIS:-false}
      - REDIS_HOST=redis
    develop:
      watch:
        - path: ./backend
          target: /app
          action: sync
        - path: ./backend/package.json
          action: rebuild
        - path: ./backend/tsconfig.json
          action: rebuild

  worker:
    build: ./backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    command: npx ts-node src/statsWorker.ts
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    profiles:
      - with-redis
  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    profiles:
      - with-redis

volumes:
  frontend_node_modules:
  backend_node_modules:
